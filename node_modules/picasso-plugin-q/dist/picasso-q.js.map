{"version":3,"file":"picasso-q.js","sources":["../../../node_modules/d3-hierarchy/src/hierarchy/count.js","../../../node_modules/d3-hierarchy/src/hierarchy/each.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../node_modules/d3-hierarchy/src/hierarchy/path.js","../../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../node_modules/d3-hierarchy/src/hierarchy/links.js","../../../node_modules/d3-hierarchy/src/hierarchy/index.js","../src/json-path-resolver.js","../src/data/augment-hierarchy.js","../../../node_modules/extend/index.js","../src/data/extractor-s.js","../src/data/util.js","../src/data/extractor-t.js","../../../node_modules/number-format.js/lib/format.min.js","../src/formatter/parts/qs-number-formatter.js","../src/formatter/numberFormat.js","../src/formatter/parts/qs-date-formatter.js","../src/formatter/timeFormat.js","../src/formatter/index.js","../src/data/field.js","../src/data/dataset.js","../src/brush/q-brush.js","../src/index.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","/**\n * Resolves the value at the given JSON path\n * @private\n * @param  {String} path [description]\n * @param  {Object} obj  [description]\n * @return {Object}      [description]\n *\n * @example\n * let path = \"/path/to/paradise\";\n * let obj = {\n *   path: {\n *     to: { paradise: \"heaven\"},\n *     from: {...}\n *   }\n * };\n * resolve( path, obj ); // \"heaven\"\n */\nexport default function resolve(path, obj) {\n  if (path.charAt(0) === '/') {\n    path = path.substring(1);\n  }\n  const arr = path.split('/');\n  let subpath;\n  let container = obj;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === '*' && Array.isArray(container)) {\n      const carr = [];\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        let v = resolve(subpath, container[c]);\n        // v.forEach(_ => _._parent = container[c]);\n        if (Array.isArray(v)) {\n          carr.push(...v);\n        } else {\n          carr.push(v);\n        }\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    } else if (!arr[i] && Array.isArray(container)) {\n      const carr = new Array(container.length);\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        carr[c] = resolve(subpath, container[c]);\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    } else if (arr[i] in container) {\n      container = container[arr[i]];\n    }\n  }\n\n  return container;\n}\n","import { hierarchy } from 'd3-hierarchy';\n\nimport picker from '../json-path-resolver';\n\nfunction getKPath(fieldIdx, cube) {\n  let idx = fieldIdx;\n  const numDimz = cube.qDimensionInfo.length;\n  const numMeas = cube.qMeasureInfo.length;\n  const order = cube.qEffectiveInterColumnSortOrder;\n  if (idx < numDimz && order) {\n    idx = order.indexOf(idx);\n  } else if (idx >= numDimz && order && numMeas > 1 && order.indexOf(-1) !== -1) {\n    idx = order.indexOf(-1);\n  }\n  let s = '/qData/*/qSubNodes';\n  const depth = Math.max(0, Math.min(idx, numDimz));\n  let i = 0;\n  for (; i < depth; i++) { // traverse down to specified depth\n    s += '/*/qSubNodes';\n  }\n  if (fieldIdx >= numDimz) {\n    // if the depth is a pseudo level, pick the given pseudo dimension, and then traverse down to leaf level (value nodes)\n    if (numMeas > 1) {\n      s += `/${fieldIdx - numDimz}/qSubNodes`; // pick pseudo dimension (measure)\n      ++i;\n      // traverse to value nodes\n      for (; i <= numDimz; i++) {\n        s += '/*/qSubNodes';\n      }\n    } else {\n      s += `/${fieldIdx - numDimz}`;\n    }\n  }\n  return s;\n}\n\nfunction getAttrPath(s, attrIdx, attrDimIdx) {\n  if (typeof attrIdx === 'number') {\n    return `${s}/*/qAttrExps/qValues/${attrIdx}`;\n  }\n  if (typeof attrDimIdx === 'number') {\n    return `${s}/*/qAttrDims/qValues/${attrDimIdx}`;\n  }\n  return s;\n}\n\n\nfunction getPathToFieldItems(field, {\n  cache,\n  cube\n}) {\n  if (!field) {\n    return '';\n  }\n  let fieldIdx = cache.fields.indexOf(field);\n  let attrIdx;\n  let attrDimIdx;\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeDimensionFields.length; i++) {\n      attrDimIdx = cache.attributeDimensionFields[i] ? cache.attributeDimensionFields[i].indexOf(field) : -1;\n      if (attrDimIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeExpressionFields.length; i++) {\n      attrIdx = cache.attributeExpressionFields[i] ? cache.attributeExpressionFields[i].indexOf(field) : -1;\n      if (attrIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n  return getAttrPath(getKPath(fieldIdx, cube), attrIdx >= 0 ? attrIdx : undefined, attrDimIdx >= 0 ? attrDimIdx : undefined);\n}\n\nfunction getTreePath(field, { cache, cube }) {\n  const s1 = getPathToFieldItems(field, { cache, cube });\n  const s2 = s1.replace(/qSubNodes/g, 'children');\n  const s3 = s2.replace(/children$/g, 'children/*');\n  return s3.replace(/qData\\/\\*/, '');\n}\n\nexport default function augment(config, dataset, cache, deps) {\n  const rootPath = '/qStackedDataPages/*/qData';\n  const cube = dataset.raw();\n\n  const root = picker(rootPath, cube);\n  if (!root || !root[0]) {\n    return null;\n  }\n\n  const h = hierarchy(root[0], config.children || (node => node.qSubNodes));\n\n  const height = h.height;\n  const propDefs = [];\n  for (let i = 0; i <= height; i++) {\n    const { props, main } = deps.normalizeConfig(config, dataset);\n    const propsArr = Object.keys(props);\n    propDefs[i] = { propsArr, props, main };\n    let currentField = null;\n    const isRoot = i === 0;\n    if (i > 0) {\n      let idx = cube.qEffectiveInterColumnSortOrder[i - 1];\n      // if (idx === -1) { // pseudo\n      //   let childIdx = node.parent.children.indexOf(node);\n      //   idx = cube.qDimensionInfo.length + childIdx; // measure field\n      // }\n      if (i > cube.qEffectiveInterColumnSortOrder.length) {\n        idx = cube.qDimensionInfo.length;\n      }\n\n      currentField = cache.fields[idx];\n    }\n    const currentItemsPath = currentField ? getTreePath(currentField, { cube, cache }) : rootPath;\n\n    propsArr.forEach((prop) => {\n      const pCfg = props[prop];\n      const arr = pCfg.fields ? pCfg.fields : [pCfg];\n      arr.forEach((p) => {\n        if (p.field) {\n          const fieldPath = getTreePath(p.field, { cube, cache });\n          if (fieldPath === currentItemsPath) {\n            p.isSame = true;\n          } else if (isRoot) {\n            p.isDescendant = true;\n            p.path = `${fieldPath}/data`;\n          } else {\n            const isDescendant = fieldPath.match(/\\//g).length > currentItemsPath.match(/\\//g).length;\n            let pathToNode = '';\n            if (isDescendant) {\n              pathToNode = `${fieldPath.replace(currentItemsPath, '').replace(/^\\/\\*/, '')}/data`;\n            } else {\n              pathToNode = Math.ceil((currentItemsPath.match(/\\//g).length - fieldPath.match(/\\//g).length) / 2);\n            }\n            p.isDescendant = isDescendant;\n            p.path = pathToNode;\n          }\n        }\n      });\n    });\n  }\n\n  const originalData = [];\n  let expando = 0;\n  h.each((node) => {\n    const currentOriginal = originalData[expando++] = node.data;\n    const propsArr = propDefs[node.depth].propsArr;\n    const props = propDefs[node.depth].props;\n    const main = propDefs[node.depth].main;\n\n    node.data = {\n      value: typeof main.value === 'function' ? main.value(currentOriginal) : currentOriginal\n    };\n    propsArr.forEach((prop) => {\n      const pCfg = props[prop];\n      const arr = pCfg.fields ? pCfg.fields : [pCfg];\n      let coll;\n      if (pCfg.fields) {\n        coll = [];\n      }\n      arr.forEach((p) => {\n        let fn = v => v;\n        let value;\n        if (p.type === 'primitive') {\n          value = p.value;\n        } else {\n          if (typeof p.value === 'function') {\n            fn = (v, n) => p.value(v, n);\n          }\n          if (!p.field) {\n            value = currentOriginal;\n          } else if (p.isSame) {\n            value = currentOriginal;\n          } else if (p.isDescendant) {\n            value = picker(p.path, node);\n            if (Array.isArray(value)) {\n              value = value.map(fn);\n              fn = p.reduce || (v => v.join(', '));\n            }\n          } else if (p.path) { // ancestor\n            const num = p.path || 0;\n            let it = node;\n            for (let i = 0; i < num; i++) {\n              it = it.parent;\n            }\n            value = it.data.value;\n          }\n        }\n        if (pCfg.fields) {\n          coll.push(fn(value, node));\n        } else {\n          node.data[prop] = {\n            value: fn(value, node)\n          };\n          if (p.source) {\n            node.data[prop].source = { field: p.source };\n          }\n        }\n      });\n\n      // reduce row if multiple fields\n      if (coll) {\n        node.data[prop] = {\n          value: typeof pCfg.value === 'function' ? pCfg.value(coll, node) : coll\n        };\n      }\n    });\n  });\n\n  return h;\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import extend from 'extend';\n\nexport function getFieldAccessor(field, page, deps) {\n  if (!field) {\n    return -1;\n  }\n  const cache = deps.cache;\n  let fieldIdx = cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.wrappedFields.length; i++) {\n      attrDimIdx = cache.wrappedFields[i].attrDims.map(v => v.instance).indexOf(field);\n      attrIdx = cache.wrappedFields[i].attrExps.map(v => v.instance).indexOf(field);\n      if (attrDimIdx !== -1 || attrIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n\n  fieldIdx -= page.qArea.qLeft;\n  if (fieldIdx < 0 || fieldIdx >= page.qArea.qWidth) {\n    // throw new Error('Field out of range');\n    return -1;\n  }\n\n  let path = `row[${fieldIdx}]`;\n\n  if (attrDimIdx >= 0) {\n    return Function('row', `return ${path}.qAttrDims.qValues[${attrDimIdx}];`); // eslint-disable-line no-new-func\n  } else if (attrIdx >= 0) {\n    return Function('row', `return ${path}.qAttrExps.qValues[${attrIdx}];`); // eslint-disable-line no-new-func\n  }\n\n  return Function('row', `return ${path};`); // eslint-disable-line no-new-func\n}\n\n// TODO - handle 'other' value\n// const specialTextValues = {\n//   '-3': (meta) => {\n//     if ('othersLabel' in meta) {\n//       return meta.othersLabel;\n//     }\n//     return '';\n//   }\n// };\n\nfunction datumExtract(propCfg, cell, {\n  key\n}) {\n  const datum = {\n    value: typeof propCfg.value === 'function' ? propCfg.value(cell) : typeof propCfg.value !== 'undefined' ? propCfg.value : cell // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label = typeof propCfg.label === 'function' ? propCfg.label(cell) : typeof propCfg.label !== 'undefined' ? String(propCfg.label) : String(datum.value); // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key()\n    };\n  }\n\n  return datum;\n}\n\nfunction cellToValue({\n  cache,\n  f,\n  mainCell,\n  p,\n  prop,\n  page,\n  rowIdx,\n  row,\n  sourceKey,\n  target,\n  targetProp\n}) {\n  let propCell = mainCell;\n  if (p.field && p.field !== f) {\n    const propCellFn = getFieldAccessor(p.field, page, { cache });\n    if (propCellFn === -1) {\n      return;\n    }\n    propCell = extend({ qRow: rowIdx }, propCellFn(row));\n  }\n  target[targetProp] = datumExtract(p, propCell, { key: sourceKey }, prop);\n}\n\nexport default function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  cfgs.forEach((cfg) => {\n    if (typeof cfg.field !== 'undefined') {\n      const cube = dataset.raw();\n      const sourceKey = dataset.key();\n      const f = typeof cfg.field === 'object' ? cfg.field : dataset.field(cfg.field);\n      const { props, main } = util.normalizeConfig(cfg, dataset);\n      const propsArr = Object.keys(props);\n\n      const track = !!cfg.trackBy;\n      const trackType = typeof cfg.trackBy;\n      const tracker = {};\n      const trackedItems = [];\n      const items = [];\n\n      cube.qDataPages.forEach((page) => {\n        const fn = getFieldAccessor(f, page, { cache });\n        if (fn === -1) {\n          return;\n        }\n        page.qMatrix.forEach((row, i) => {\n          const rowIdx = page.qArea.qTop + i;\n          const mainCell = extend({ qRow: rowIdx }, fn(row));\n          const ret = datumExtract(main, mainCell, { key: sourceKey });\n          const exclude = main.filter && !main.filter(mainCell);\n          if (exclude) {\n            return;\n          }\n\n          // loop through all props that need to be mapped and\n          // assign 'value' and 'source' to each property\n          propsArr.forEach((prop) => {\n            const p = props[prop];\n            let arr = p.fields || [p];\n\n            if (p.fields) {\n              ret[prop] = [];\n            }\n            arr.forEach((pp, fidx) => {\n              cellToValue({\n                cache,\n                f,\n                mainCell,\n                p: pp,\n                prop,\n                props,\n                page,\n                rowIdx,\n                row,\n                sourceKey,\n                target: p.fields ? ret[prop] : ret,\n                targetProp: p.fields ? fidx : prop\n              });\n            });\n            // if (!track && p.fields) {\n            //   const fieldValues = ret[prop].map(v => v.value);\n            //   ret[prop] = {\n            //     value: typeof p.reduce === 'function' ? p.reduce(fieldValues) : fieldValues\n            //   };\n            // }\n            if (p.fields) {\n              const fieldValues = ret[prop].map(v => v.value);\n              const fieldLabels = ret[prop].map(v => v.label);\n              ret[prop] = {\n                value: typeof p.value === 'function' ? p.value(fieldValues) : typeof p.value !== 'undefined' ? p.value : fieldValues // eslint-disable-line no-nested-ternary\n              };\n              ret[prop].label = typeof p.label === 'function' ? p.label(fieldLabels) : typeof p.label !== 'undefined' ? String(p.label) : String(ret[prop].value); // eslint-disable-line no-nested-ternary\n            }\n          });\n\n          // collect items based on the trackBy value\n          // items with the same trackBy value are placed in an array and reduced later\n          if (track) {\n            util.track({\n              cfg,\n              itemData: mainCell,\n              obj: ret,\n              target: trackedItems,\n              tracker,\n              trackType\n            });\n          }\n\n          items.push(ret);\n        });\n      });\n\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(...util.collect(trackedItems, {\n          main,\n          propsArr,\n          props\n        }));\n      } else {\n        dataItems.push(...items);\n      }\n    }\n  });\n  return dataItems;\n}\n","function flattenTree(children, steps, arrIndexAtTargetDepth) {\n  const arr = [];\n  if (!children || !children.length) {\n    return arr;\n  }\n  if (steps <= 0) {\n    const nodes = arrIndexAtTargetDepth >= 0 ? [children[arrIndexAtTargetDepth]] : children;\n    arr.push(...nodes);\n  } else {\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].children && children[i].children.length) {\n        arr.push(...flattenTree(children[i].children, steps - 1, arrIndexAtTargetDepth));\n      }\n    }\n  }\n  return arr;\n}\n\nexport function treeAccessor(sourceDepth, targetDepth, arrIndexAtTargetDepth) {\n  if (sourceDepth === targetDepth) {\n    return d => d;\n  }\n  if (sourceDepth > targetDepth) { // traverse upwards\n    const steps = Math.max(0, Math.min(100, sourceDepth - targetDepth));\n    const path = [...Array(steps)].map(String.prototype.valueOf, 'parent').join('.');\n    return Function('node', `return node.${path};`); // eslint-disable-line no-new-func\n  }\n  if (targetDepth > sourceDepth) { // flatten descendants\n    const steps = Math.max(0, Math.min(100, targetDepth - sourceDepth));\n    return node => flattenTree(node.children, steps - 1, arrIndexAtTargetDepth);\n  }\n  return false;\n}\n\nexport function findField(query, { cache }) {\n  if (typeof query === 'number') {\n    return cache.fields[query];\n  }\n\n  const allFields = cache.allFields;\n  if (typeof query === 'function') {\n    for (let i = 0; i < allFields.length; i++) {\n      if (query(allFields[i])) {\n        return allFields[i];\n      }\n    }\n    return false;\n  } else if (typeof query === 'string') {\n    for (let i = 0; i < allFields.length; i++) {\n      if (allFields[i].key() === query || allFields[i].title() === query) {\n        return allFields[i];\n      }\n    }\n  } else if (query && allFields.indexOf(query) !== -1) { // assume 'query' is a field instance\n    return query;\n  }\n\n  throw Error(`Field not found: ${query}`);\n}\n","import { hierarchy } from 'd3-hierarchy';\n\nimport picker from '../json-path-resolver';\n\nimport { treeAccessor } from './util';\n\nconst DIM_RX = /^qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /^\\/?qMeasureInfo\\/(\\d+)/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)/;\n\nexport function getFieldDepth(field, { cube }) {\n  if (!field) {\n    return -1;\n  }\n  let key = field.key();\n  let isFieldDimension = false;\n  let fieldIdx = -1; // cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  let fieldDepth = -1;\n  let pseudoMeasureIndex = -1;\n  let measureIdx = -1;\n  let remainder = key;\n\n  const treeOrder = cube.qEffectiveInterColumnSortOrder;\n\n  if (DIM_RX.test(remainder)) {\n    isFieldDimension = true;\n    fieldIdx = +DIM_RX.exec(remainder)[1];\n    remainder = key.replace(DIM_RX, '');\n  }\n\n  if (M_RX.test(remainder)) {\n    if (cube.qMode === 'K') {\n      pseudoMeasureIndex = +M_RX.exec(remainder)[1];\n    } else if (treeOrder && treeOrder.indexOf(-1) !== -1) {\n      pseudoMeasureIndex = +M_RX.exec(remainder)[1];\n      measureIdx = 0;\n    } else {\n      measureIdx = +M_RX.exec(remainder)[1];\n    }\n    remainder = remainder.replace(M_RX, '');\n  }\n\n  if (remainder) {\n    if (ATTR_DIM_RX.exec(remainder)) {\n      attrDimIdx = +ATTR_DIM_RX.exec(remainder)[1];\n    } else if (ATTR_EXPR_RX.exec(remainder)) {\n      attrIdx = +ATTR_EXPR_RX.exec(remainder)[1];\n    }\n  }\n\n  if (isFieldDimension) {\n    fieldDepth = treeOrder ? treeOrder.indexOf(fieldIdx) : fieldIdx;\n  } else if (treeOrder && treeOrder.indexOf(-1) !== -1) { // if pseudo dimension exists in sort order\n    fieldDepth = treeOrder.indexOf(-1); // depth of pesudodimension\n  } else { // assume measure is at the bottom of the tree\n    fieldDepth = cube.qDimensionInfo.length - (cube.qMode === 'K' ? 0 : 1);\n  }\n\n  return {\n    fieldDepth: fieldDepth + 1, // +1 due to root node\n    pseudoMeasureIndex,\n    measureIdx,\n    attrDimIdx,\n    attrIdx\n  };\n}\n\nfunction getFieldAccessor(sourceDepthObject, targetDepthObject) {\n  let nodeFn = treeAccessor(sourceDepthObject.fieldDepth, targetDepthObject.fieldDepth, targetDepthObject.pseudoMeasureIndex);\n  let valueFn;\n\n  if (targetDepthObject.measureIdx >= 0) {\n    valueFn = node => node.data.qValues[targetDepthObject.measureIdx];\n  } else {\n    valueFn = node => node.data;\n  }\n  let attrFn;\n\n  if (targetDepthObject.attrDimIdx >= 0) {\n    attrFn = data => data.qAttrDims.qValues[targetDepthObject.attrDimIdx];\n  } else if (targetDepthObject.attrIdx >= 0) {\n    attrFn = data => data.qAttrExps.qValues[targetDepthObject.attrIdx];\n  }\n\n  return {\n    nodeFn,\n    attrFn,\n    valueFn\n  };\n}\n\nfunction datumExtract(propCfg, cell, {\n  key\n}) {\n  const datum = {\n    value: typeof propCfg.value === 'function' ? propCfg.value(cell) : typeof propCfg.value !== 'undefined' ? propCfg.value : cell // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label = typeof propCfg.label === 'function' ? propCfg.label(cell) : typeof propCfg.label !== 'undefined' ? String(propCfg.label) : String(datum.value); // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key()\n    };\n  }\n\n  return datum;\n}\n\nexport default function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  cfgs.forEach((cfg) => {\n    if (typeof cfg.field !== 'undefined') {\n      const cube = dataset.raw();\n      const rootPath = cube.qMode === 'K' ? '/qStackedDataPages/*/qData' : '/qTreeDataPages/*';\n      const childNodes = cube.qMode === 'K' ? 'qSubNodes' : 'qNodes';\n      const root = picker(rootPath, cube);\n      if (!root || !root[0]) {\n        return;\n      }\n      const sourceKey = dataset.key();\n      const f = typeof cfg.field === 'object' ? cfg.field : dataset.field(cfg.field);\n      const { props, main } = util.normalizeConfig(cfg, dataset);\n      const propsArr = Object.keys(props);\n      if (!cache.tree) {\n        cache.tree = hierarchy(root[0], node => node[childNodes]);\n      }\n      const itemDepthObject = getFieldDepth(f, { cube, cache });\n      const { nodeFn, attrFn, valueFn } = getFieldAccessor({ fieldDepth: 0 }, itemDepthObject);\n\n      propsArr.forEach((prop) => {\n        const pCfg = props[prop];\n        const arr = pCfg.fields ? pCfg.fields : [pCfg];\n        arr.forEach((p) => {\n          if (p.field) {\n            if (p.field === f) {\n              p.isSame = true;\n            } else {\n              const depthObject = getFieldDepth(p.field, { cube, cache });\n              const accessors = getFieldAccessor(itemDepthObject, depthObject);\n              p.accessor = accessors.nodeFn;\n              p.valueAccessor = accessors.valueFn;\n              p.attrAccessor = accessors.attrFn;\n            }\n          }\n        });\n      });\n\n      const track = !!cfg.trackBy;\n      const trackType = typeof cfg.trackBy;\n      const tracker = {};\n      const trackedItems = [];\n\n      const items = nodeFn(cache.tree);\n      const mapped = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const itemData = attrFn ? attrFn(valueFn(item)) : valueFn(item);\n        const exclude = main.filter && !main.filter(itemData);\n        if (exclude) {\n          continue;\n        }\n        const ret = datumExtract(main, itemData, { key: sourceKey });\n        propsArr.forEach((prop) => {\n          const pCfg = props[prop];\n          const arr = pCfg.fields || [pCfg];\n          let coll;\n          if (pCfg.fields) {\n            coll = [];\n          }\n          arr.forEach((p) => {\n            let fn;\n            let value;\n            if (p.type === 'primitive') {\n              value = p.value;\n            } else {\n              if (typeof p.value === 'function') { // accessor function\n                fn = p.value;\n              }\n              if (p.accessor) {\n                value = p.accessor(item);\n                if (Array.isArray(value)) { // propably descendants\n                  value = value.map(p.valueAccessor);\n                  if (p.attrAccessor) {\n                    value = value.map(p.attrAccessor);\n                  }\n                  if (fn) {\n                    value = value.map(fn);\n                    fn = null;\n                  }\n                  value = p.reduce ? p.reduce(value) : value;\n                } else {\n                  value = p.attrAccessor ? p.attrAccessor(p.valueAccessor(value)) : p.valueAccessor(value);\n                }\n              } else {\n                value = itemData;\n              }\n            }\n            if (pCfg.fields) {\n              coll.push(fn ? fn(value) : value);\n            } else {\n              ret[prop] = {\n                value: fn ? fn(value) : value\n              };\n              ret[prop].label = String(ret[prop].value);\n              if (p.field) {\n                ret[prop].source = { field: p.field.key(), key: sourceKey };\n              }\n            }\n          });\n          if (coll) {\n            ret[prop] = {\n              value: typeof pCfg.value === 'function' ? pCfg.value(coll) : coll\n            };\n            ret[prop].label = String(ret[prop].value);\n          }\n        });\n        // collect items based on the trackBy value\n        // items with the same trackBy value are placed in an array and reduced later\n        if (track) {\n          util.track({\n            cfg,\n            itemData,\n            obj: ret,\n            target: trackedItems,\n            tracker,\n            trackType\n          });\n        }\n        mapped.push(ret);\n      }\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(...util.collect(trackedItems, {\n          main,\n          propsArr,\n          props\n        }));\n      } else {\n        dataItems.push(...mapped);\n      }\n    }\n  });\n  return dataItems;\n}\n","/*! javascript-number-formatter - v1.1.11 - http://mottie.github.com/javascript-number-formatter/ * © ecava */\n!function(a,b){\"function\"==typeof define&&define.amd?define([],b):\"object\"==typeof module?module.exports=b():a.format=b()}(this,function(){return function(a,b){\"use strict\";if(!a||isNaN(+b))return b;var c,d,e,f,g,h,i,j,k,l,m=a.length,n=a.search(/[0-9\\-\\+#]/),o=n>0?a.substring(0,n):\"\",p=a.split(\"\").reverse().join(\"\"),q=p.search(/[0-9\\-\\+#]/),r=m-q,s=a.substring(r,r+1),t=r+(\".\"===s||\",\"===s?1:0),u=q>0?a.substring(t,m):\"\";if(a=a.substring(n,t),b=\"-\"===a.charAt(0)?-b:+b,c=b<0?b=-b:0,d=a.match(/[^\\d\\-\\+#]/g),e=d&&d[d.length-1]||\".\",f=d&&d[1]&&d[0]||\",\",a=a.split(e),b=b.toFixed(a[1]&&a[1].length),b=+b+\"\",h=a[1]&&a[1].lastIndexOf(\"0\"),j=b.split(\".\"),(!j[1]||j[1]&&j[1].length<=h)&&(b=(+b).toFixed(h+1)),k=a[0].split(f),a[0]=k.join(\"\"),g=a[0]&&a[0].indexOf(\"0\"),g>-1)for(;j[0].length<a[0].length-g;)j[0]=\"0\"+j[0];else 0===+j[0]&&(j[0]=\"\");if(b=b.split(\".\"),b[0]=j[0],i=k[1]&&k[k.length-1].length){for(l=b[0],p=\"\",r=l.length%i,m=l.length,t=0;t<m;t++)p+=l.charAt(t),!((t-r+1)%i)&&t<m-i&&(p+=f);b[0]=p}return b[1]=a[1]&&b[1]?e+b[1]:\"\",d=b.join(\"\"),\"0\"!==d&&\"\"!==d||(c=!1),o+((c?\"-\":\"\")+d)+u}});","import formatter from 'number-format.js';\n\nfunction escapeRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\nconst SIprefixes = {\n    3: 'k',\n    6: 'M',\n    9: 'G',\n    12: 'T',\n    15: 'P',\n    18: 'E',\n    21: 'Z',\n    24: 'Y',\n    '-3': 'm',\n    '-6': 'μ',\n    '-9': 'n',\n    '-12': 'p',\n    '-15': 'f',\n    '-18': 'a',\n    '-21': 'z',\n    '-24': 'y'\n  },\n  percentage = /%$/,\n  //    scientific = /e[\\+\\-][0-9]+/,\n  radix = /^\\(r(0[2-9]|[12]\\d|3[0-6])\\)/i,\n  oct = /^\\(oct\\)/i,\n  dec = /^\\(dec\\)/i,\n  hex = /^\\(hex\\)/i,\n  bin = /^\\(bin\\)/i,\n  rom = /^\\(rom\\)/i,\n  functional = /^(\\(rom\\)|\\(bin\\)|\\(hex\\)|\\(dec\\)|\\(oct\\)|\\(r(0[2-9]|[12]\\d|3[0-6])\\))/i,\n  prec = /#|0/g;\n\nfunction formatRadix(value, fradix, pattern, decimal) {\n  value = value.toString(fradix);\n  if (pattern[1] === pattern[1].toUpperCase()) {\n    value = value.toUpperCase();\n  }\n  if (value.length - value.indexOf('.') > 10) { // limit to 10 decimal places\n    value = value.slice(0, value.indexOf('.') + 11);\n  }\n\n  return value.replace('.', decimal || '.');\n}\n\n// value must be an integer\n// value must not be in scientific notation\nfunction formatRoman(value, pattern) {\n  let i,\n    s = '',\n    v = Number(String(value).slice(-3)),\n    nThousands = (value - v) / 1000,\n    decimal = [0, 1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900].reverse(),\n    numeral = ['0', 'I', 'IV', 'V', 'IX', 'X', 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM'].reverse();\n\n  while (v > 0) {\n    for (i = 0; i < decimal.length; i++) {\n      if (decimal[i] <= v) {\n        s += numeral[i];\n        v -= decimal[i];\n        break;\n      }\n    }\n  }\n\n  for (i = 0; i < nThousands; i++) {\n    s = `M${s}`;\n  }\n\n  if (pattern[1] !== pattern[1].toUpperCase()) {\n    s = s.toLowerCase();\n  }\n  return s;\n}\n\nfunction formatFunctional(value, pattern, d) {\n  let temp;\n  if (radix.test(pattern)) {\n    value = formatRadix(value, Number(/\\d{2}/.exec(pattern)[0]), pattern, d);\n  } else if (oct.test(pattern)) {\n    value = formatRadix(value, 8, pattern, d);\n  } else if (dec.test(pattern)) {\n    value = formatRadix(value, 10, pattern, d);\n  } else if (hex.test(pattern)) {\n    value = formatRadix(value, 16, pattern, d);\n  } else if (bin.test(pattern)) {\n    value = formatRadix(value, 2, pattern, d);\n  } else if (rom.test(pattern)) {\n    temp = '';\n    if (value < 0) {\n      temp = '-';\n      value = -value;\n    }\n    value = Math.floor(value);\n    if (value === 0) {\n      value = '0';\n    } else if (value <= 500000) { // limit in engine\n      value = formatRoman(value, pattern);\n      value = temp + value;\n    } else {\n      value = pattern + temp + value.toExponential(0); // to return same result as engine\n    }\n  }\n\n  return value;\n}\n\nfunction escape(value, flags, justStr) {\n  const str = escapeRegExp(value);\n  if (justStr) {\n    return str;\n  }\n  return new RegExp(str || '', flags);\n}\n\nfunction createRegExp(thousand, decimal) {\n  if (decimal) {\n    decimal = escapeRegExp(decimal);\n  }\n  if (thousand) {\n    thousand = escapeRegExp(thousand);\n  }\n  return new RegExp(`(?:[#0]+${thousand})?[#0]+(?:${decimal}[#0]+)?`);\n}\n\nfunction getAbbreviations(localeInfo, listSeparator) {\n  if (!localeInfo || !localeInfo.qNumericalAbbreviation) {\n    return SIprefixes;\n  }\n\n  const abbreviations = {};\n  let abbrs = localeInfo.qNumericalAbbreviation.split(listSeparator);\n\n  abbrs.forEach((abbreviation) => {\n    let abbreviationTuple = abbreviation.split(':');\n    if (abbreviationTuple.length === 2) {\n      abbreviations[abbreviationTuple[0]] = abbreviationTuple[1];\n    }\n  });\n\n  return abbreviations;\n}\n\nfunction preparePattern(o, t, d) {\n  let parts,\n    lastPart,\n    pattern = o.pattern,\n    numericPattern,\n    prefix,\n    postfix,\n    groupTemp,\n    decTemp,\n    temp,\n    regex;\n\n  if (pattern.indexOf('A') >= 0) { // abbreviate SI\n    pattern = pattern.replace('A', '');\n    o.abbreviate = true;\n  }\n\n  // extract the numeric part from the pattern\n  regex = createRegExp(t, d);\n  numericPattern = pattern.match(regex);\n  numericPattern = numericPattern ? numericPattern[0] : '';\n  prefix = numericPattern ? pattern.substr(0, pattern.indexOf(numericPattern)) : pattern;\n  postfix = numericPattern ? pattern.substring(pattern.indexOf(numericPattern) + numericPattern.length) : '';\n\n  if (!numericPattern) {\n    numericPattern = pattern ? '#' : '##########';\n  }\n\n  if (t && t === d) { // ignore grouping if grouping separator is same as decimal separator\n    // extract decimal part\n    parts = numericPattern.split(d);\n    lastPart = parts.pop();\n    numericPattern = parts.join('') + d + lastPart;\n    t = '';\n  }\n\n  // formatting library does not support multiple characters as separator (nor +-).\n  // do a temporary replacement\n  groupTemp = t;\n  t = /,/.test(d) ? '¤' : ',';\n  if (groupTemp) {\n    numericPattern = numericPattern.replace(escape(groupTemp, 'g'), t);\n  }\n\n  decTemp = d;\n  d = '.';\n  if (decTemp) {\n    numericPattern = numericPattern.replace(escape(decTemp, 'g'), d);\n  }\n\n  temp = numericPattern.match(/#/g);\n  temp = temp ? temp.length : 0;\n\n  const splitPattern = pattern.split(decTemp);\n  let matchPrecisionResult;\n  if (splitPattern[1]) {\n    matchPrecisionResult = splitPattern[1].match(prec);\n  }\n\n  o.prefix = prefix || '';\n  o.postfix = postfix || '';\n  o.pattern = pattern;\n  o.maxPrecision = matchPrecisionResult ? matchPrecisionResult.length : 2;\n  o.percentage = percentage.test(pattern);\n  o.numericPattern = numericPattern || '';\n  o.numericRegex = new RegExp(`${escape(t, null, true)}|${escape(d, null, true)}`, 'g');\n  o.groupTemp = groupTemp;\n  o.decTemp = decTemp;\n  o.t = t;\n  o.d = d;\n  o.temp = temp;\n}\n\nclass NumberFormatter {\n  /**\n   * @name NumberFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   * @param {String} [thousand]\n   * @param {String} [decimal]\n   * @param {String} [type]\n   */\n  constructor(localeInfo, pattern, thousand, decimal, type) {\n    this.localeInfo = localeInfo;\n    this.pattern = pattern;\n    this.thousandDelimiter = thousand || ',';\n    this.decimalDelimiter = decimal || '.';\n    this.type = type || 'numeric';\n\n    // FIXME qListSep?\n    // this.patternSeparator = this.localeInfo && this.localeInfo.qListSep ? this.localeInfo.qListSep : ';';\n    this.patternSeparator = ';';\n\n    this.abbreviations = getAbbreviations(localeInfo, this.patternSeparator);\n\n    this.prepare();\n  }\n\n  clone() {\n    const n = new NumberFormatter(this.localeInfo, this.pattern, this.thousandDelimiter, this.decimalDelimiter, this.type);\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a number according to a specific pattern.\n   * Use # for optional numbers and 0 for padding.\n   * @param {Number} value Number to format.\n   * @param {String} [pattern] The pattern to apply.\n   * @param {String} [t] Grouping separator.\n   * @param {String} [d] Decimal delimiter.\n   * @example\n   * format(10, \"0\") // 10;\n   * format(10, \"#\") // 10;\n   * format(10, \"##.#\") // 10;\n   * format(10, \"##.0\") // 10.0;\n   * format(10, \"000\") // 010;\n   * format(10.123, \"0.0\") // 10.1;\n   * format(10.123, \"0.00##\") // 10.123; // at least 2 decimals, never more than 4\n   * format(123456789, \"#,###\") // 123,456,789;\n   * format(123456789, \"####-####\", \"-\") // 1-2345-6789;\n   * format(10000, \"#A\") // 10k,  A -> SI abbreviation\n   * format(1234567, \"#.###A\") // 1.235M;\n   * format(0.0001, \"#.#A\") // 0.1m;\n   *\n   * format(0.257, \"0.0%\") // 25.7%; // will multiply by 100\n   * format(9876, \"$#,###\") // $9,876;\n   * format(-9876, \"$#,###;$(#,###)\") // $(9,876); // use ; for alternative formatting for negative values\n   * format(10, \"(r16)\") // a; // radix 16\n   * format(15, \"(hex)\") // f; // same as (r16)\n   * format(15, \"(HEX)\") // F;\n   * format(10, \"(bin)\") // 1010; // same as (r02)\n   * format(10, \"(oct)\") // 12; // same as (r08)\n   */\n  format(value, pattern, t, d) {\n    this.prepare(pattern, t, d);\n    return this.formatValue(value);\n  }\n\n  prepare(pattern, t, d) {\n    let prep;\n\n    if (typeof pattern === 'undefined') { pattern = this.pattern; }\n    if (typeof t === 'undefined') { t = this.thousandDelimiter; }\n    if (typeof d === 'undefined') { d = this.decimalDelimiter; }\n\n\n    if (!pattern) {\n      this._prepared = { pattern: false };\n      return;\n    }\n\n    this._prepared = {\n      positive: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      },\n      negative: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      },\n      zero: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      }\n    };\n    prep = this._prepared;\n\n    pattern = pattern.split(this.patternSeparator);\n    prep.positive.pattern = pattern[0];\n    prep.negative.pattern = pattern[1];\n    prep.zero.pattern = pattern[2];\n    if (functional.test(pattern[0])) {\n      prep.positive.isFunctional = true;\n    }\n    if (!pattern[1]) {\n      prep.negative = false;\n    } else if (functional.test(pattern[1])) {\n      prep.negative.isFunctional = true;\n    }\n    if (!pattern[2]) {\n      prep.zero = false;\n    } else if (functional.test(pattern[2])) {\n      prep.zero.isFunctional = true;\n    }\n\n    if (!prep.positive.isFunctional) {\n      preparePattern(prep.positive, t, d);\n    }\n    if (prep.negative && !prep.negative.isFunctional) {\n      preparePattern(prep.negative, t, d);\n    }\n    if (prep.zero && !prep.zero.isFunctional) {\n      preparePattern(prep.zero, t, d);\n    }\n  }\n\n  formatValue(value) {\n    let prep = this._prepared,\n      temp,\n      exponent,\n      abbr = '',\n      absValue,\n      num,\n      sciValue = '',\n      d,\n      t,\n      i,\n      numericPattern,\n      decimalPartPattern,\n      original = value;\n\n    if (isNaN(value)) {\n      return `${original}`;\n    }\n\n    value = +value;\n\n    if (prep.pattern === false) {\n      return value.toString();\n    }\n\n    if (value === 0 && prep.zero) {\n      prep = prep.zero;\n      return prep.pattern;\n    } else if (value < 0 && prep.negative) {\n      prep = prep.negative;\n      value = -value;\n    } else {\n      prep = prep.positive;\n    }\n    d = prep.d;\n    t = prep.t;\n\n    if (prep.isFunctional) {\n      value = formatFunctional(value, prep.pattern, d);\n    } else {\n      if (prep.percentage) {\n        value *= 100;\n      }\n\n      if (prep.abbreviate) {\n        const abbrArray = Object.keys(this.abbreviations).map(key => parseInt(key, 10)).sort((a, b) => a - b);\n        let lowerAbbreviation;\n        let upperAbbreviation = abbrArray[0];\n        i = 0;\n        exponent = Number(Number(value).toExponential().split('e')[1]);\n\n        while (upperAbbreviation <= exponent && i < abbrArray.length) {\n          i++;\n          upperAbbreviation = abbrArray[i];\n        }\n\n        if (i > 0) {\n          lowerAbbreviation = abbrArray[i - 1];\n        }\n\n        let suggestedAbbrExponent;\n\n        // value and lower abbreviation is for values above 10, use the lower (move to the left <==)\n        if ((lowerAbbreviation && exponent > 0 && lowerAbbreviation > 0)) {\n          suggestedAbbrExponent = lowerAbbreviation;\n        // value and lower abbreviation is for values below 0.1 (move to the right ==>)\n        } else if ((exponent < 0 && lowerAbbreviation < 0) || !lowerAbbreviation) {\n          // upper abbreviation is also for values below 0.1 and precision allows for using the upper abbreviation(move to the right ==>)\n          if (upperAbbreviation < 0 && (upperAbbreviation - exponent) <= prep.maxPrecision) {\n            suggestedAbbrExponent = upperAbbreviation;\n          // lower abbrevaition is smaller than exponent and we can't get away with not abbreviating\n          } else if (lowerAbbreviation <= exponent && !(upperAbbreviation > 0 && -exponent <= prep.maxPrecision)) { // (move to left <==)\n            suggestedAbbrExponent = lowerAbbreviation;\n          }\n        }\n        if (suggestedAbbrExponent) {\n          abbr = this.abbreviations[suggestedAbbrExponent];\n          value /= Math.pow(10, suggestedAbbrExponent);\n        }\n      }\n\n      absValue = Math.abs(value);\n      temp = prep.temp;\n      numericPattern = prep.numericPattern;\n      decimalPartPattern = numericPattern.split(d)[1];\n\n      if (this.type === 'I') {\n        value = Math.round(value);\n      }\n      num = value;\n\n      if (!decimalPartPattern && numericPattern.slice(-1)[0] === '#') {\n        if (absValue >= Math.pow(10, temp) || absValue < 1 || absValue < 1e-4) {\n          if (value === 0) {\n            value = '0';\n          } else if (absValue < 1e-4 || absValue >= 1e20) { // engine always formats values < 1e-4 in scientific form, values >= 1e20 can only be represented in scientific form\n            value = num.toExponential(Math.max(1, Math.min(14, temp)) - 1);\n            value = value.replace(/\\.?0+(?=e)/, '');\n            sciValue = '';\n          } else {\n            value = value.toPrecision(Math.max(1, Math.min(14, temp)));\n            if (value.indexOf('.') >= 0) {\n              value = value.replace(value.indexOf('e') < 0 ? /0+$/ : /\\.?0+(?=e)/, '');\n              value = value.replace('.', d);\n            }\n          }\n        } else {\n          numericPattern += d;\n          temp = Math.max(0, Math.min(20, temp - Math.ceil(Math.log(absValue) / Math.log(10))));\n          for (i = 0; i < temp; i++) {\n            numericPattern += '#';\n          }\n\n          value = formatter(numericPattern, value);\n        }\n      } else if (absValue >= 1e15 || (absValue > 0 && absValue <= 1e-14)) {\n        value = absValue ? absValue.toExponential(15).replace(/\\.?0+(?=e)/, '') : '0';\n      } else {\n        const wholePart = Number((value.toFixed(Math.min(20, decimalPartPattern ? decimalPartPattern.length : 0))).split('.')[0]);\n        let wholePartPattern = numericPattern.split(d)[0];\n        wholePartPattern += d;\n\n        value = formatter(wholePartPattern, wholePart) || '0';\n\n        if (decimalPartPattern) {\n          const nDecimals = Math.max(0, Math.min(14, decimalPartPattern.length)); // the length of e.g. 0000#####\n          const nZeroes = decimalPartPattern.replace(/#+$/, '').length;\n          let decimalPart = (this.type === 'I' ? 0 : absValue % 1).toFixed(nDecimals).slice(2).replace(/0+$/, ''); // remove trailing zeroes\n\n          for (i = decimalPart.length; i < nZeroes; i++) {\n            decimalPart += '0';\n          }\n\n          if (decimalPart) {\n            value += d + decimalPart;\n          }\n        } else if (wholePart === 0) { // to avoid \"-\" being prefixed to value\n          num = 0;\n        }\n      }\n\n      value = value.replace(prep.numericRegex, (m) => {\n        if (m === t) {\n          return prep.groupTemp;\n        } else if (m === d) {\n          return prep.decTemp;\n        }\n        return '';\n      });\n      if (num < 0 && !/^-/.test(value)) {\n        value = `-${value}`;\n      }\n    }\n\n    return prep.prefix + value + sciValue + abbr + prep.postfix;\n  }\n\n  static getStaticFormatter() {\n    return { prepare() { }, formatValue(v) { return `${v}`; } };\n  }\n}\n\nexport default function numberFormatFactory(...args) {\n  return new NumberFormatter(...args);\n}\n","import numberFormatFactory from './parts/qs-number-formatter';\n\nexport default function formatter(pattern, thousand, decimal, qType, localeInfo) {\n  const qformat = numberFormatFactory(localeInfo, pattern, thousand, decimal, qType);\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Number} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    return qformat.formatValue(value);\n  }\n\n  /**\n    * Format a value according to a specific pattern\n    * that is not the one specified in the constructor\n    *\n    * @param  {String} p   Pattern\n    * @param  {Number} v   Value\n    * @param  {String} t   Thousand\n    * @param  {String} d   Decimal\n    * @return {String}     Formatted value\n    */\n  format.format = function formatFn(p, v, t, d) {\n    return qformat.format(v, p, t, d);\n  };\n\n  /**\n    * Change the pattern on existing formatter\n    *\n    * @param  {String} p     Pattern (optional)\n    * @return {String}       Returns the pattern\n    */\n  format.pattern = function patternFn(p) {\n    if (p) {\n      qformat.pattern = p;\n      qformat.prepare();\n    }\n    return qformat.pattern;\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  /* format.locale = function( ...args ) {\n    locale = formatLocale( ...args );\n    d3format = locale.format( pattern );\n\n    return this;\n  }; */\n\n  return format;\n}\n","import { TYPES } from '../timeFormat';\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst DAYS_ABBR = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst MONTHS_ABBR = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction pad(s, n) {\n  for (let i = s.length; i < n; i++) {\n    s = `0${s}`;\n  }\n  return s;\n}\n\nfunction parseDate(d, twelveFormat) {\n  let h = d.getHours();\n  let day = d.getDay() - 1;\n  if (twelveFormat) {\n    h %= 12;\n    if (!h) { // h == 0 -> 12\n      h = 12;\n    }\n  }\n\n  if (day < 0) {\n    day = 6;\n  }\n\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth(),\n    day,\n    date: d.getDate(),\n    h,\n    m: d.getMinutes(),\n    s: d.getSeconds(),\n    f: d.getMilliseconds(),\n    t: d.getHours() >= 12 ? 'pm' : 'am'\n  };\n}\n\nfunction getRemainder(value) {\n  let s = value.toString().split('.');\n  if (s[1]) {\n    s = Number(`0.${s[1]}`);\n  } else {\n    return 0;\n  }\n  return s;\n}\n\nfunction parseIntervalDays(days) {\n  const d = days;\n  const h = 24 * getRemainder(d);\n  const m = 60 * getRemainder(h);\n  const s = 60 * getRemainder(m);\n  const ms = 1000 * getRemainder(s);\n\n  return {\n    d: Math.floor(d),\n    h: Math.floor(h),\n    m: Math.floor(m),\n    s: Math.floor(s),\n    f: Math.round(ms)\n  };\n}\n\nfunction parseInterval(days, pattern) {\n  let units = parseIntervalDays(days),\n    d = units.d,\n    h = units.h,\n    m = units.m,\n    s = units.s,\n    f = units.f,\n    w = 0,\n    date;\n\n  if (/w+|t+/gi.test(pattern)) {\n    date = new Date(1899, 11, 30 + Math.floor(days), 0, 0, 24 * 60 * 60 * (days - Math.floor(days)));\n    if (isNaN(date.getTime())) {\n      date = null;\n    }\n  }\n\n  if (!/D+/gi.test(pattern)) {\n    h += d * 24;\n  }\n  if (!/h+/gi.test(pattern)) {\n    m += h * 60;\n  }\n  if (!/m+/gi.test(pattern)) {\n    s += m * 60;\n  }\n  if (/w+/gi.test(pattern)) {\n    w = date ? date.getDay() - 1 : 0;\n    if (w < 0) {\n      w = 6;\n    }\n  }\n\n  let someT = '';\n  if (date) {\n    someT = date.getHours() >= 12 ? 'pm' : 'am';\n  }\n\n  return {\n    year: 0,\n    month: 0,\n    day: w,\n    date: d,\n    h,\n    m,\n    s,\n    f,\n    t: someT\n  };\n}\n\nfunction getMasks(inst, d) {\n  return {\n    'Y+|y+': {\n      Y: `${Number((`${d.year}`).slice(-2))}`,\n      YY: pad((`${d.year}`).slice(-2), 2),\n      YYY: pad((`${d.year}`).slice(-3), 3),\n      def(m) { // default\n        return pad((`${d.year}`), m.length);\n      }\n    },\n    'M+': {\n      M: d.month + 1,\n      MM: pad(`${d.month + 1}`, 2),\n      MMM: inst.locale_months_abbr[d.month],\n      def: inst.locale_months[d.month]\n    },\n    'W+|w+': {\n      W: d.day,\n      WW: pad(`${d.day}`, 2),\n      WWW: inst.locale_days_abbr[d.day],\n      def: inst.locale_days[d.day]\n    },\n    'D+|d+': {\n      D: d.date,\n      def(m) {\n        return pad(`${d.date}`, m.length);\n      }\n    },\n    'h+|H+': {\n      h: d.h,\n      def(m) { return pad(`${d.h}`, m.length); }\n    },\n    'm+': {\n      m: d.m,\n      def(m) { return pad(`${d.m}`, m.length); }\n    },\n    's+|S+': {\n      s: d.s,\n      def(m) { return pad(`${d.s}`, m.length); }\n    },\n    'f+|F+': {\n      def(m) {\n        let f = `${d.f}`,\n          n = m.length - f.length;\n        if (n > 0) {\n          for (let i = 0; i < n; i++) {\n            f += '0';\n          }\n        } else if (n < 0) {\n          f = f.slice(0, m.length);\n        }\n        return f;\n      }\n    },\n    't{1,2}|T{1,2}': {\n      def(m) {\n        let t = d.t;\n        if (m[0].toUpperCase() === m[0]) {\n          t = t.toUpperCase();\n        }\n        t = t.slice(0, m.length);\n        return t;\n      }\n    }\n  };\n}\n\nclass DateFormatter {\n  /**\n   * @name DateFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   */\n  constructor(localeInfo, pattern, qtype) {\n    const info = localeInfo || {};\n\n    if (!info.qCalendarStrings) {\n      info.qCalendarStrings = {\n        qLongDayNames: DAYS,\n        qDayNames: DAYS_ABBR,\n        qLongMonthNames: MONTHS,\n        qMonthNames: MONTHS_ABBR\n      };\n    }\n\n    this.localeInfo = info;\n    this.locale_days = info.qCalendarStrings.qLongDayNames.slice();\n    this.locale_days_abbr = info.qCalendarStrings.qDayNames.slice();\n    this.locale_months = info.qCalendarStrings.qLongMonthNames.slice();\n    this.locale_months_abbr = info.qCalendarStrings.qMonthNames.slice();\n\n    if (!pattern) {\n      const patternMap = {\n        [TYPES.TIME]: info.qTimeFmt || 'hh:mm:ss',\n        [TYPES.DATE]: info.qDateFmt || 'YYYY-MM-DD',\n        [TYPES.DATE_TIME]: info.qTimestampFmt || 'YYYY-MM-DD hh:mm:ss'\n      };\n\n      pattern = patternMap[qtype];\n    }\n\n    this.pattern = pattern;\n  }\n\n  clone() {\n    const n = new DateFormatter(this.localeInfo, this.pattern);\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a date according to given pattern\n   * @param {Date} date The date to format.\n   * @param {String} pattern The desired format of the date\n   * var d = new Date(2013, 8, 15, 13, 55, 40, 987);\n   * var n = new DateFormatter();\n   * @example\n   * m.format( d, 'YYYY-MM-DD hh:mm:ss.ffff') // 2013-08-15 13:55:40.9870\n   * m.format( d, 'h:m:s tt') // 1:55:40 pm\n   * m.format( d, 'h:m:s TT') // 1:55:40 PM\n   * m.format( d, 'M/D/YYYY') // 8/15/2013\n   * m.format( d, 'WWWW DD MMM') // Thursday 15 Aug\n   * m.format( d, 'WWW DD MMMM @ hh:mm:ss') // Thu 15 August @ 13:55:40\n   */\n  format(date, pattern) {\n    // Fallback pattern is set in constructor\n    if (!pattern) {\n      pattern = this.pattern ? this.pattern : 'YYYY-MM-DD hh:mm:ss';\n    }\n\n    pattern = pattern.replace(/\\[.+]|\\[|]/g, '');\n    const hasTwelveFlag = /t+/ig.test(pattern);\n    let parsedDate;\n\n    if (date instanceof Date) {\n      parsedDate = parseDate(date, hasTwelveFlag);\n    } else {\n      if (date < 0) {\n        // parseInterval don't support for negative values\n        date = -date;\n        pattern = `-${pattern}`;\n      }\n      parsedDate = parseInterval(date, pattern);\n    }\n    // remove [] and everything inside it\n\n    const masks = getMasks(this, parsedDate);\n\n    const masksArr = [];\n    for (const mask in masks) {\n      if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n        masksArr.push(mask);\n      }\n    }\n    const dateTimeRegex = new RegExp(masksArr.join('|'), 'g');\n\n    const result = pattern.replace(dateTimeRegex, (m) => {\n      let r;\n      let mask;\n      for (mask in masks) {\n        if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n          r = new RegExp(mask);\n          if (r.test(m)) {\n            break;\n          }\n        }\n      }\n      if (!r) {\n        return '';\n      }\n      let value;\n      for (const submask in masks[mask]) {\n        if (submask === m || submask.toLowerCase() === m) {\n          value = masks[mask][submask];\n          if (typeof value === 'undefined') {\n            value = masks[mask][submask.toLowerCase()];\n          }\n          break;\n        }\n      }\n      if (typeof value === 'undefined') {\n        value = masks[mask].def;\n      }\n\n      if (typeof value === 'function') {\n        value = value(m);\n      }\n      return value;\n    });\n    return result;\n  }\n}\n\nexport default function dateFormatFactory(...args) {\n  return new DateFormatter(...args);\n}\n","import dateFormatFactory from './parts/qs-date-formatter';\n\nexport function QlikTimeToDate(value) {\n  return new Date(1899, 11, 30 + Math.floor(value), 0, 0, 0, 1000 * 24 * 60 * 60 * (value - Math.floor(value)));\n}\n\nexport const TYPES = {\n  AUTO: 'U',\n  INTEGER: 'I',\n  NUMBER: 'R',\n  FIXED_TO: 'F',\n  MONEY: 'M',\n  DATE: 'D',\n  TIME: 'T',\n  DATE_TIME: 'TS',\n  INTERVAL: 'IV'\n};\n\nexport default function formatter(pattern, qtype = 'TS', localeInfo = null) {\n  let qformat = dateFormatFactory(localeInfo, pattern, qtype);\n\n  /**\n   * Prepare a value according to the specified qtype\n   *\n   * @param  {Number} value The value to be formatted\n   * @return {Number}       The converted value (if applied)\n   */\n  function prepare(value) {\n    if (qtype !== TYPES.INTERVAL) {\n      return QlikTimeToDate(value);\n    }\n    return value;\n  }\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Date} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    value = prepare(value);\n    return qformat.format(value);\n  }\n\n  /**\n    * Format a value according to a specific pattern\n    * that is not the one specified in the constructor\n    *\n    * @param  {String} p   Pattern\n    * @param  {Date} v   Value\n    * @return {String}     Formatted value\n    */\n  format.format = function formatFn(p, v) {\n    v = prepare(v);\n    return qformat.format(v, p);\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  format.locale = function locale(li) {\n    qformat = dateFormatFactory(li, pattern, qtype);\n\n    return this;\n  };\n\n  /**\n   * Get or set the QType\n   *\n   * @param  {String} nqt New qType (optional)\n   * @return {String}     Current qtype\n   */\n  format.qtype = function qtypeFn(nqt) {\n    if (nqt !== undefined) {\n      qtype = nqt;\n    }\n    return qtype;\n  };\n\n  return format;\n}\n","import numberFormat from './numberFormat';\nimport timeFormat from './timeFormat';\n\nexport {\n  numberFormat,\n  timeFormat\n};\n\nexport function createFromMetaInfo(meta, localeInfo) {\n  if (meta && meta.qNumFormat && ['D', 'T', 'TS', 'IV'].indexOf(meta.qNumFormat.qType) !== -1) {\n    return timeFormat(meta.qNumFormat.qFmt, meta.qNumFormat.qType, localeInfo);\n  }\n  let pattern = '#';\n  let thousand = localeInfo && typeof localeInfo.qThousandSep !== 'undefined' ? localeInfo.qThousandSep : ',';\n  let decimal = localeInfo && typeof localeInfo.qDecimalSep !== 'undefined' ? localeInfo.qDecimalSep : '.';\n  let type = 'U';\n  let isAuto = meta && !!meta.qIsAutoFormat;\n  if (meta && meta.qNumFormat) {\n    pattern = meta.qNumFormat.qFmt || pattern;\n    thousand = meta.qNumFormat.qThou || thousand;\n    decimal = meta.qNumFormat.qDec || decimal;\n    type = meta.qNumFormat.qType || type;\n    isAuto = isAuto && ['M'].indexOf(meta.qNumFormat.qType) === -1;\n  } else {\n    isAuto = true;\n  }\n\n  if (isAuto) {\n    pattern = `#${decimal}##A`;\n    type = 'U';\n  }\n\n  return numberFormat(pattern, thousand, decimal, type, localeInfo);\n}\n","import { createFromMetaInfo } from '../formatter';\n\nexport default function qField({\n  meta,\n  id,\n  key,\n  localeInfo,\n  fieldExtractor,\n  value,\n  type\n} = {}) {\n  let values;\n\n  const valueFn = value || (type === 'dimension' ? (d => d.qElemNo) : (d => d.qValue));\n  const labelFn = d => d.qText || '';\n  const reduce = type === 'dimension' ? 'first' : 'avg';\n  const formatter = createFromMetaInfo(meta, localeInfo);\n\n  const f = {\n    id: () => id,\n    key: () => key,\n    raw: () => meta,\n    title: () => meta.qFallbackTitle || meta.label,\n    type: () => type,\n    items: () => {\n      if (!values) {\n        values = fieldExtractor(f);\n      }\n      return values;\n    },\n    min: () => meta.qMin,\n    max: () => meta.qMax,\n    value: valueFn,\n    label: labelFn,\n    reduce,\n    formatter: () => formatter,\n    tags: () => meta.qTags\n  };\n\n  return f;\n}\n","import augmentH from './augment-hierarchy';\nimport SExtractor from './extractor-s';\nimport TExtractor from './extractor-t';\nimport { findField } from './util';\nimport field from './field';\n\nfunction hierarchy(config = {}, dataset, cache, deps) {\n  const cube = dataset.raw();\n  if (cube.qMode !== 'K') {\n    return null;\n  }\n  return augmentH(config, dataset, cache, deps);\n}\n\nfunction createFields(path, obj, prefix, parentKey, opts) {\n  return (obj[path] || []).map((meta, i) => {\n    const fieldKey = `${parentKey ? `${parentKey}/` : ''}${path}/${i}`;\n    const f = {\n      instance: field(Object.assign({\n        id: `${prefix ? `${prefix}/` : ''}${fieldKey}`,\n        key: fieldKey,\n        meta\n      }, opts))\n    };\n    f.attrDims = createFields('qAttrDimInfo', meta, prefix, fieldKey, Object.assign({}, opts, { value: v => v.qElemNo, type: 'dimension' }));\n    f.attrExps = createFields('qAttrExprInfo', meta, prefix, fieldKey, Object.assign({}, opts, { value: v => v.qNum, type: 'measure' }));\n    f.measures = createFields('qMeasureInfo', meta, prefix, fieldKey, Object.assign({}, opts, { value: v => v.qValue, type: 'measure' }));\n    return f;\n  });\n}\n\nexport default function q({\n  key,\n  data,\n  config = {}\n} = {}) {\n  const cache = {\n    fields: [],\n    wrappedFields: [],\n    allFields: []\n  };\n\n  const cube = data;\n  if (!cube) {\n    throw new Error('Missing \"data\" input');\n  }\n\n  if (!cube.qDimensionInfo) {\n    throw new Error('The \"data\" input is not recognized as a hypercube');\n  }\n\n  const deps = q.util;\n\n  const opts = {\n    cache,\n    cube,\n    localeInfo: config.localeInfo,\n    fieldExtractor: null,\n    pages: null\n  };\n\n  const dataset = {\n    key: () => key,\n    raw: () => cube,\n    field: query => findField(query, opts),\n    fields: () => cache.fields.slice(),\n    extract: extractionConfig => opts.extractor(extractionConfig, dataset, cache, deps),\n    hierarchy: hierarchyConfig => hierarchy(hierarchyConfig, dataset, cache, deps),\n    _cache: () => cache\n  };\n\n  if (cube.qMode === 'K' || cube.qMode === 'T' || (!cube.qMode && cube.qNodesOnDim)) {\n    opts.extractor = TExtractor;\n    opts.pages = cube.qMode === 'K' ? cube.qStackedDataPages : cube.qTreeDataPages;\n  } else if (cube.qMode === 'S') {\n    opts.extractor = SExtractor;\n    opts.pages = cube.qDataPages;\n  } else {\n    opts.ectractor = () => []; // TODO - throw unsupported error?\n  }\n\n  opts.fieldExtractor = f => opts.extractor({ field: f }, dataset, cache, deps);\n\n  const dimAcc = cube.qMode === 'S' ? (d => d.qElemNumber) : undefined;\n  const measAcc = cube.qMode === 'S' ? (d => d.qNum) : undefined;\n\n  cache.wrappedFields.push(...createFields('qDimensionInfo', cube, key, '', Object.assign({}, opts, { value: dimAcc, type: 'dimension' })));\n  cache.wrappedFields.push(...createFields('qMeasureInfo', cube, key, '', Object.assign({}, opts, { value: measAcc, type: 'measure' })));\n\n  cache.fields = cache.wrappedFields.map(f => f.instance);\n\n  const traverse = (arr) => {\n    arr.forEach((f) => {\n      cache.allFields.push(f.instance);\n      traverse(f.measures);\n      traverse(f.attrDims);\n      traverse(f.attrExps);\n    });\n  };\n\n  traverse(cache.wrappedFields);\n\n  return dataset;\n}\n","import resolve from '../json-path-resolver';\n\nconst LAYOUT_TO_PROP = [\n  ['qHyperCube', 'qHyperCubeDef'],\n  ['qTreeData', 'qTreeDataDef'],\n  ['qDimensionInfo', 'qDimensions'],\n  ['qMeasureInfo', 'qMeasures'],\n  ['qAttrDimInfo', 'qAttributeDimensions'],\n  ['qAttrExprInfo', 'qAttributeExpressions']\n];\n\nconst DIM_RX = /\\/qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /\\/qMeasureInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)(?:\\/(\\d+))?/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\nconst HC_RX = /\\/?qHyperCube/;\nconst TD_RX = /\\/?qTreeData/;\n\nconst SHORTEN_HC = path => `${path.substr(0, path.indexOf('/qHyperCubeDef') + 14)}`; // 14 = length of '/qHyperCubeDef'\nconst SHORTEN_TD = path => `${path.substr(0, path.indexOf('/qTreeDataDef') + 13)}`; // 13 = length of '/qTreeDataDef'\n\nexport function extractFieldFromId(id, layout) {\n  let path = id;\n  let dimensionIdx = -1;\n  let measureIdx = -1;\n  let pathToCube = '';\n  let shortenizer = p => p;\n  if (HC_RX.test(id)) {\n    pathToCube = `${path.substr(0, path.indexOf('qHyperCube') + 10)}`; // 10 = length of 'qHyperCube'\n    shortenizer = SHORTEN_HC;\n  } else if (TD_RX.test(id)) {\n    pathToCube = `${path.substr(0, path.indexOf('qTreeData') + 9)}`; // 9 = length of 'qTreeData'\n    shortenizer = SHORTEN_TD;\n  }\n\n  let shortenPath = true;\n\n  if (DIM_RX.test(id)) {\n    dimensionIdx = +DIM_RX.exec(id)[1];\n  }\n\n  if (M_RX.test(id)) {\n    measureIdx = +M_RX.exec(id)[1];\n  }\n\n  if (ATTR_DIM_RX.test(id)) {\n    measureIdx = -1;\n    dimensionIdx = 0;\n    const attrCol = +ATTR_DIM_RX.exec(path)[2];\n    if (!isNaN(attrCol)) {\n      dimensionIdx = attrCol;\n      path = path.replace(/\\/\\d+$/, '');\n    }\n    shortenPath = false;\n  }\n\n  if (ATTR_EXPR_RX.test(id)) {\n    // depends on number of measures + number of attr expressions\n    // in dimensions and measures before this one\n    const offset = measureIdx;\n    measureIdx = 0;\n    if (layout) {\n      const hc = resolve(pathToCube, layout);\n\n      // offset by number of measures\n      measureIdx += (hc.qMeasureInfo || []).length;\n\n      // offset by total number of attr expr in dimensions\n      // (assuming attr expr in dimensions are ordered first)\n      if (dimensionIdx > -1) {\n        measureIdx = hc.qDimensionInfo\n          .slice(0, dimensionIdx)\n          .reduce((v, dim) => v + dim.qAttrExprInfo.length, measureIdx);\n        dimensionIdx = -1;\n      } else {\n        measureIdx = hc.qDimensionInfo.reduce((v, dim) => v + dim.qAttrExprInfo.length, measureIdx);\n        // offset by total number of attr expr in measures before 'index'\n        measureIdx = hc.qMeasureInfo\n          .slice(0, offset)\n          .reduce((v, meas) => v + meas.qAttrExprInfo.length, measureIdx);\n      }\n\n      // offset by the actual column value for the attribute expression itself\n      measureIdx += +ATTR_EXPR_RX.exec(path)[1];\n    }\n  }\n\n  LAYOUT_TO_PROP.forEach(([v, prop]) => {\n    path = path.replace(v, prop);\n  });\n\n  if (shortenPath) {\n    path = shortenizer(path);\n  }\n\n  if (path && path[0] !== '/') {\n    path = `/${path}`;\n  }\n\n  return {\n    measureIdx,\n    dimensionIdx,\n    path\n  };\n}\n\n/**\n * Helper method to generate suitable QIX selection methods and parameters based on a brush instance.\n * @alias brush\n * @memberof picasso.q\n * @param {brush} brush A brush instance\n * @param {object} [opts]\n * @param {boolean} [opts.byCells=false] Whether to prefer selection by row index.\n * @param {string} [opts.primarySource] Field source to extract row indices from. If not specified, indices from first source are used.\n * @param {object} [layout] QIX data layout. Needed only when brushing on attribute expressions, to be able to calculate the measure index.\n * @return {object[]} An array of relevant selections\n */\nexport default function qBrush(brush, opts = {}, layout) {\n  const byCells = opts.byCells;\n  const primarySource = opts.primarySource;\n  const selections = [];\n  const methods = {};\n  const isActive = brush.isActive();\n  let hasValues = false;\n  brush.brushes().forEach((b) => {\n    const info = extractFieldFromId(b.id, layout);\n    if (b.type === 'range' && info.measureIdx > -1 && info.dimensionIdx > -1) {\n      const ranges = b.brush.ranges();\n      if (ranges.length) {\n        hasValues = true;\n        if (!methods.multiRangeSelectTreeDataValues) {\n          methods.multiRangeSelectTreeDataValues = {\n            path: info.path,\n            ranges: []\n          };\n        }\n        ranges.forEach(range => methods.multiRangeSelectTreeDataValues.ranges.push({\n          qMeasureIx: info.measureIdx,\n          qDimensionIx: info.dimensionIdx,\n          qRange: {\n            qMin: range.min,\n            qMax: range.max,\n            qMinInclEq: true,\n            qMaxInclEq: true\n          }\n        }));\n      }\n    } else {\n      if (b.type === 'range' && info.measureIdx > -1) {\n        const ranges = b.brush.ranges();\n        if (ranges.length) {\n          hasValues = true;\n          if (!methods.rangeSelectHyperCubeValues) {\n            methods.rangeSelectHyperCubeValues = {\n              path: info.path,\n              ranges: []\n            };\n          }\n          ranges.forEach(range => methods.rangeSelectHyperCubeValues.ranges.push({\n            qMeasureIx: info.measureIdx,\n            qRange: {\n              qMin: range.min,\n              qMax: range.max,\n              qMinInclEq: true,\n              qMaxInclEq: true\n            }\n          }));\n        }\n      }\n      if (b.type === 'range' && info.dimensionIdx > -1) {\n        const ranges = b.brush.ranges();\n        if (ranges.length) {\n          hasValues = true;\n          if (!methods.selectHyperCubeContinuousRange) {\n            methods.selectHyperCubeContinuousRange = {\n              path: info.path,\n              ranges: []\n            };\n          }\n          ranges.forEach(range => methods.selectHyperCubeContinuousRange.ranges.push({\n            qDimIx: info.dimensionIdx,\n            qRange: {\n              qMin: range.min,\n              qMax: range.max,\n              qMinInclEq: true,\n              qMaxInclEq: false\n            }\n          }));\n        }\n      }\n      if (b.type === 'value' && info.dimensionIdx > -1) {\n        if (byCells) {\n          if (!methods.selectHyperCubeCells) {\n            methods.selectHyperCubeCells = {\n              path: info.path,\n              cols: []\n            };\n          }\n\n          methods.selectHyperCubeCells.cols.push(info.dimensionIdx);\n          if (b.id === primarySource || (!primarySource && !methods.selectHyperCubeCells.values)) {\n            methods.selectHyperCubeCells.values = b.brush.values()\n              .map(s => +s)\n              .filter(v => !isNaN(v));\n            hasValues = !!methods.selectHyperCubeCells.values.length;\n          }\n        } else {\n          const values = b.brush.values().map(s => +s).filter(v => !isNaN(v));\n          hasValues = !!values.length;\n          selections.push({\n            params: [info.path, info.dimensionIdx, values, false],\n            method: 'selectHyperCubeValues'\n          });\n        }\n      }\n    }\n  });\n\n  if (!hasValues && isActive) {\n    return [{\n      method: 'resetMadeSelections',\n      params: []\n    }];\n  }\n\n  if (methods.rangeSelectHyperCubeValues) {\n    selections.push({\n      method: 'rangeSelectHyperCubeValues',\n      params: [methods.rangeSelectHyperCubeValues.path, methods.rangeSelectHyperCubeValues.ranges, [], true]\n    });\n  }\n\n  if (methods.selectHyperCubeContinuousRange) {\n    selections.push({\n      method: 'selectHyperCubeContinuousRange',\n      params: [methods.selectHyperCubeContinuousRange.path, methods.selectHyperCubeContinuousRange.ranges]\n    });\n  }\n\n  if (methods.selectHyperCubeCells) {\n    selections.push({\n      method: 'selectHyperCubeCells',\n      params: [\n        methods.selectHyperCubeCells.path,\n        methods.selectHyperCubeCells.values,\n        methods.selectHyperCubeCells.cols\n      ]\n    });\n  }\n\n  if (methods.multiRangeSelectTreeDataValues) {\n    selections.push({\n      method: 'multiRangeSelectTreeDataValues',\n      params: [methods.multiRangeSelectTreeDataValues.path, methods.multiRangeSelectTreeDataValues.ranges]\n    });\n  }\n\n  return selections;\n}\n","import data from './data/dataset';\nimport qBrushHelper from './brush/q-brush';\nimport numberFormat from './formatter/numberFormat';\nimport timeFormat from './formatter/timeFormat';\n\nexport default function initialize(picasso) {\n  data.util = picasso.data('matrix').util;\n  picasso.data('q', data);\n  picasso.formatter('q-number', numberFormat);\n  picasso.formatter('q-time', timeFormat);\n}\n\ninitialize.qBrushHelper = qBrushHelper; // deprecated\ninitialize.selections = qBrushHelper;\n"],"names":["count","node","sum","children","i","length","value","eachAfter","callback","current","next","n","reverse","pop","push","nodes","data","compare","eachBefore","sort","end","start","ancestor","leastCommonAncestor","parent","k","splice","a","b","aNodes","ancestors","bNodes","c","each","leaves","root","links","source","target","hierarchy","Node","valued","child","childs","defaultChildren","Array","depth","computeHeight","node_copy","copyData","d","height","prototype","constructor","node_count","node_each","node_eachAfter","node_eachBefore","node_sum","node_sort","path","node_path","node_ancestors","descendants","node_descendants","node_leaves","node_links","copy","resolve","obj","charAt","substring","arr","split","subpath","container","isArray","carr","slice","join","v","getKPath","fieldIdx","cube","idx","numDimz","qDimensionInfo","numMeas","qMeasureInfo","order","qEffectiveInterColumnSortOrder","indexOf","s","Math","max","min","getAttrPath","attrIdx","attrDimIdx","getPathToFieldItems","field","cache","fields","attributeDimensionFields","attributeExpressionFields","undefined","getTreePath","s1","s2","replace","s3","augment","config","dataset","deps","rootPath","raw","picker","h","qSubNodes","propDefs","normalizeConfig","props","main","propsArr","Object","keys","currentField","isRoot","currentItemsPath","forEach","prop","pCfg","p","fieldPath","isSame","isDescendant","match","pathToNode","ceil","originalData","expando","currentOriginal","coll","fn","type","map","reduce","num","it","hasOwn","hasOwnProperty","toStr","toString","call","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","key","extend","options","name","src","copyIsArray","clone","arguments","deep","getFieldAccessor","page","wrappedFields","attrDims","instance","attrExps","qArea","qLeft","qWidth","Function","datumExtract","propCfg","cell","datum","label","String","cellToValue","f","mainCell","rowIdx","row","sourceKey","targetProp","propCell","propCellFn","qRow","extract","util","cfgs","dataItems","cfg","babelHelpers.typeof","track","trackBy","trackType","tracker","trackedItems","items","qDataPages","qMatrix","qTop","ret","exclude","filter","pp","fidx","fieldValues","fieldLabels","itemData","collect","flattenTree","steps","arrIndexAtTargetDepth","treeAccessor","sourceDepth","targetDepth","valueOf","findField","query","allFields","title","Error","DIM_RX","M_RX","ATTR_EXPR_RX","ATTR_DIM_RX","getFieldDepth","isFieldDimension","fieldDepth","pseudoMeasureIndex","measureIdx","remainder","treeOrder","test","exec","qMode","sourceDepthObject","targetDepthObject","nodeFn","valueFn","qValues","attrFn","qAttrDims","qAttrExps","childNodes","tree","itemDepthObject","depthObject","accessors","accessor","valueAccessor","attrAccessor","mapped","item","define","amd","module","this","isNaN","e","g","j","l","m","search","o","q","r","t","u","toFixed","lastIndexOf","escapeRegExp","str","SIprefixes","percentage","radix","oct","dec","hex","bin","rom","functional","prec","formatRadix","fradix","pattern","decimal","toUpperCase","formatRoman","Number","nThousands","numeral","toLowerCase","formatFunctional","temp","floor","toExponential","escape","flags","justStr","RegExp","createRegExp","thousand","getAbbreviations","localeInfo","listSeparator","qNumericalAbbreviation","abbreviations","abbrs","abbreviation","abbreviationTuple","preparePattern","parts","lastPart","numericPattern","prefix","postfix","groupTemp","decTemp","regex","abbreviate","substr","splitPattern","matchPrecisionResult","maxPrecision","numericRegex","NumberFormatter","thousandDelimiter","decimalDelimiter","patternSeparator","prepare","subtype","formatValue","prep","_prepared","positive","isFunctional","negative","zero","exponent","abbr","absValue","sciValue","decimalPartPattern","original","abbrArray","parseInt","lowerAbbreviation","upperAbbreviation","suggestedAbbrExponent","pow","abs","round","toPrecision","log","formatter","wholePart","wholePartPattern","nDecimals","nZeroes","decimalPart","numberFormatFactory","args","qType","qformat","format","formatFn","patternFn","DAYS","DAYS_ABBR","MONTHS","MONTHS_ABBR","pad","parseDate","twelveFormat","getHours","day","getDay","year","getFullYear","month","getMonth","date","getDate","getMinutes","getSeconds","getMilliseconds","getRemainder","parseIntervalDays","days","ms","parseInterval","units","w","Date","getTime","someT","getMasks","inst","Y","YY","YYY","def","M","MM","MMM","locale_months_abbr","locale_months","W","WW","WWW","locale_days_abbr","locale_days","D","DateFormatter","qtype","info","qCalendarStrings","qLongDayNames","qDayNames","qLongMonthNames","qMonthNames","patternMap","TYPES","TIME","qTimeFmt","DATE","qDateFmt","DATE_TIME","qTimestampFmt","hasTwelveFlag","parsedDate","masks","masksArr","mask","dateTimeRegex","result","submask","dateFormatFactory","QlikTimeToDate","AUTO","INTEGER","NUMBER","FIXED_TO","MONEY","INTERVAL","locale","li","qtypeFn","nqt","createFromMetaInfo","meta","qNumFormat","timeFormat","qFmt","qThousandSep","qDecimalSep","isAuto","qIsAutoFormat","qThou","qDec","numberFormat","qField","id","fieldExtractor","values","qElemNo","qValue","labelFn","qText","qFallbackTitle","qMin","qMax","tags","qTags","augmentH","createFields","parentKey","opts","fieldKey","assign","qNum","measures","pages","extractor","extractionConfig","hierarchyConfig","_cache","qNodesOnDim","TExtractor","qStackedDataPages","qTreeDataPages","SExtractor","ectractor","dimAcc","qElemNumber","measAcc","traverse","LAYOUT_TO_PROP","HC_RX","TD_RX","SHORTEN_HC","SHORTEN_TD","extractFieldFromId","layout","dimensionIdx","pathToCube","shortenizer","shortenPath","attrCol","offset","hc","dim","qAttrExprInfo","meas","qBrush","brush","byCells","primarySource","selections","methods","isActive","hasValues","brushes","ranges","multiRangeSelectTreeDataValues","qMeasureIx","qDimensionIx","qRange","range","qMinInclEq","qMaxInclEq","rangeSelectHyperCubeValues","selectHyperCubeContinuousRange","qDimIx","selectHyperCubeCells","cols","params","method","initialize","picasso","qBrushHelper"],"mappings":"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"}